# Based on https://qxf2.com/blog/tox-with-circleci/
version: 2
jobs:
  build:
      docker:
        - image: circleci/python:3.7
      steps:
        - checkout
        - run: python -m venv venv
        - run: venv/bin/pip install -r requirements_dev.txt
        - run: echo "source /home/circleci/project/venv/bin/activate" >> $BASH_ENV
        - run: python setup.py sdist bdist_wheel
        - store_artifacts:
            path: dist
  deploy:
      docker:
        - image: circleci/python:3.7
      steps:
        - checkout
        - run: python -m venv venv
        - run: venv/bin/pip install -r requirements_dev.txt
        - run: echo "source /home/circleci/project/venv/bin/activate" >> $BASH_ENV
        - run: python setup.py sdist bdist_wheel
        - run:
            name: init .pypirc
            command: |
              echo -e "[pypi]" >> ~/.pypirc
              echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
              echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
        - run:
            name: upload to pypi
            command: venv/bin/twine upload dist/*
        - store_artifacts:
            path: dist
  test:
      docker:
        - image: themattrix/tox
      steps:
        - checkout
        - run: apt-get -y update
        - run: apt-get -y install ipython
        - run: apt-get -y install nano
        - run: apt-get -y install git
        - run: git config --global user.email "you@example.com"
        - run: git config --global user.name "Your Name"
        - run: python -m venv venv
        - run: venv/bin/pip install jupyter
        - run: venv/bin/pip install -r requirements_dev.txt
        - run: echo "source /root/project/venv/bin/activate" >> $BASH_ENV
        - run: python setup.py develop
        # - run: pytest -s --junitxml=test_results/pytest/pytest-report.xml
        - run: tox -q
        - store_test_results:
            path: test_results
        - store_artifacts:
            path: test_results
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
          context: whisk
      - build
      - deploy:
          context: whisk
          requires:
            - test
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
